name: Deploy to TestFlight on Release Merge

on:
  pull_request:
    types: [closed]
    branches:
      - release
jobs:
  deploy:
    if: (github.event.pull_request.merged == true)
    runs-on: macos-15
    
    steps:
      - name: Select Xcode 16.3
        run: sudo xcode-select -s /Applications/Xcode_16.3.app
        
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6.10' # 프로젝트에 맞게 조정
          bundler-cache: true
      - uses: jdx/mise-action@v2
      
      - name: Create GoogleService-Info.plist
        env:
          GOOGLE_SERVICE_INFO_PLIST_CONTENT: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST_CONTENT }}
        run: |
          PLIST_PATH="Targets/MOZIP/Resources/GoogleService-Info.plist"
          
          # 경로의 디렉토리가 존재하지 않으면 생성합니다.
          mkdir -p "$(dirname "${PLIST_PATH}")"
          
          # Secret에서 파일을 생성합니다.
          echo "$GOOGLE_SERVICE_INFO_PLIST_CONTENT" > "${PLIST_PATH}"
          
          # 파일이 잘 생성되었는지 확인 (디버깅용)
          ls -l "${PLIST_PATH}"
          cat "${PLIST_PATH}" | head -n 5 # 파일 내용 일부 확인

      - name: Install Tuist
        run: |
          mise install tuist@4.9.0
          mise use tuist@4.9.0
          tuist clean
      - name: Install Tuist Dependencies
        run: |
          tuist install
          
      - name: Install Bundler & Fastlane
        run: |
          gem install bundler -v 2.4.22
          bundle install

      - name: Run Fastlane Beta Lane
        run: bundle exec fastlane beta
    
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
      KEYCHAIN_NAME: ${{ secrets.KEYCHAIN_NAME }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSPHRASE }}
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
